%%%% Starting test filter-numbers
Group begin: filter-numbers
Test begin:
  test-name: "Filters out numbers less than 50"
  source-file: "/Users/aas/Developer/guile-beginners/chapter1-exercises/filter-numbers.scm"
  source-line: 21
  source-form: (test-equal "Filters out numbers less than 50" (quote (57 102 50 65)) (filter-numbers 50 (quote (20 57 102 49 50 65))))
Test end:
  result-kind: pass
  actual-value: (57 102 50 65)
  expected-value: (57 102 50 65)
Test begin:
  test-name: "List is unchanged when all are greater than threshold"
  source-file: "/Users/aas/Developer/guile-beginners/chapter1-exercises/filter-numbers.scm"
  source-line: 25
  source-form: (test-equal "List is unchanged when all are greater than threshold" (quote (20 57 102 49 50 65)) (filter-numbers 2 (quote (20 57 102 49 50 65))))
Test end:
  result-kind: pass
  actual-value: (20 57 102 49 50 65)
  expected-value: (20 57 102 49 50 65)
Test begin:
  test-name: "Skips non-number values"
  source-file: "/Users/aas/Developer/guile-beginners/chapter1-exercises/filter-numbers.scm"
  source-line: 29
  source-form: (test-equal "Skips non-number values" (quote (2 4)) (filter-numbers 2 (quote (1 2 "three" 4))))
Test end:
  result-kind: pass
  actual-value: (2 4)
  expected-value: (2 4)
Test begin:
  test-name: "Returns an empty list when given an empty list"
  source-file: "/Users/aas/Developer/guile-beginners/chapter1-exercises/filter-numbers.scm"
  source-line: 33
  source-form: (test-equal "Returns an empty list when given an empty list" (quote ()) (filter-numbers 2 (quote ())))
Test end:
  result-kind: pass
  actual-value: ()
  expected-value: ()
Group end: filter-numbers
# of expected passes      4
